{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAiDA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAxDM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAML,EAAOI,EAAME,cACnBC,EAEIP,EADFQ,SAAYC,EAAKF,EAALf,MAAOkB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAErBC,EAAS,CACbpB,MAAOqB,OAAOJ,EAAMK,OACpBJ,KAAMG,OAAOH,EAAKI,OAClBH,OAAQE,OAAOF,EAAOG,QAGpBC,EAAeH,EAAOpB,MAE1B,GAAIoB,EAAOpB,MAAQ,GAAKoB,EAAOF,KAAO,GAAKE,EAAOD,QAAU,EAE1D,YADAvB,EAAA4B,OAAOC,QAAQ,iCAmBnB,SAAwBC,G,IACjBC,GAAQ,EAARC,GAAQ,EAARC,OAAQC,E,IAAb,QAAKC,EAAAC,EAAYN,EAAGO,OAAAC,cAAfP,GAAAI,EAAAC,EAAQG,QAAAC,MAART,GAAQ,GAARI,EAAQT,MACRA,MAAQ,E,WADRM,GAAQ,EAARC,EAAQQ,C,aAARV,GAAQ,MAARK,EAAQM,QAARN,EAAQM,Q,YAARV,E,MAAAC,C,GAhBLU,CAAe/B,EAAKQ,UAEpB,IAAK,IAAIwB,EAAI,EAAGA,EAAIpB,EAAOD,OAAQqB,GAAK,EACtC1C,EAAc0C,EAAGjB,GACdkB,MAAK,SAAAC,G,IAAG3C,EAAQ2C,EAAR3C,SAAUC,EAAK0C,EAAL1C,MACjBJ,EAAA4B,OAAOmB,QAAQ,qBAAoCC,OAAf7C,EAAS,QAAY6C,OAAN5C,EAAM,M,IAE1D6C,OAAM,SAAAH,G,IAAG3C,EAAQ2C,EAAR3C,SAAUC,EAAK0C,EAAL1C,MAClBJ,EAAA4B,OAAOC,QAAQ,oBAAmCmB,OAAf7C,EAAS,QAAY6C,OAAN5C,EAAM,M,IAG5DuB,GAAgBH,EAAOF,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const form = event.currentTarget;\n  const {\n    elements: { delay, step, amount },\n  } = form;\n  const values = {\n    delay: Number(delay.value),\n    step: Number(step.value),\n    amount: Number(amount.value),\n  };\n\n  let summaryDelay = values.delay;\n\n  if (values.delay < 0 || values.step < 0 || values.amount <= 0) {\n    Notify.failure('Please input positive values');\n    return;\n  }\n\n  clearFormInput(form.elements);\n\n  for (let i = 1; i < values.amount; i += 1) {\n    createPromise(i, summaryDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    summaryDelay += values.step;\n  }\n}\n\nfunction clearFormInput(obj) {\n  for (const el of obj) {\n    el.value = '';\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.5;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","event","preventDefault","currentTarget","_elements","elements","delay1","step","amount","values","Number","value","summaryDelay","Notify","failure","obj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","$ce04d3a99e08e73b$var$clearFormInput","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.06b97772.js.map"}